#!/sbin/sh
# APK-Patcher: Recovery Flashable Zip
# osm0sis @ xda-developers

OUTFD=/proc/self/fd/$2;
ZIP="$3";

ui_print() { echo -e "ui_print $1\nui_print" > $OUTFD; }
show_progress() { echo "progress $1 $2" > $OUTFD; }
set_progress() { echo "set_progress $1" > $OUTFD; }
abort() { ui_print "$*"; exit 1; }

baksmali() {
  ANDROID_DATA=$ap LD_LIBRARY_PATH=/system/lib dalvikvm -classpath $baksmali org.jf.baksmali.main -x $1 -o classout;
  test $? != 0 && abort "Decompiling APK classes failed. Aborting...";
}
smali() {
  ANDROID_DATA=$ap LD_LIBRARY_PATH=/system/lib dalvikvm -classpath $smali org.jf.smali.main classout -o classes.dex;
  test $? != 0 && abort "Rebuilding APK classes failed. Aborting...";
  $bin/zip -v $1 classes.dex;
  test $? != 0 && abort "Updating APK classes failed. Aborting...";
}

# working directory variables
ap=/tmp/apkpatcher;
bin=$ap/tools;
patch=$ap/patch;
script=$ap/script;

show_progress 1.34 0;
mkdir -p $ap;
cd $ap;
unzip -o "$ZIP";
if [ $? != 0 -o -z "$(ls $ap)" ]; then
  abort "Unzip failed. Aborting...";
fi;

# set up extracted files and directories
chmod -R 755 $bin $script *.sh;

# import variables
. $ap/envvar.sh;

ui_print "$banner";
ui_print " ";
ui_print "APK-Patcher by osm0sis @ xda-developers";
ui_print " ";
/sbin/busybox mount /system;
/sbin/busybox mount /data;
set_progress 0.1;
progress=10;

# dexed bak/smali jars (via: dx --dex --output=classes.dex <file>.jar)
baksmali=$bin/baksmali-*-dexed.jar;
smali=$bin/smali-*-dexed.jar;

ui_print "Patching...";

amount=$((100 / `echo $apklist | wc -w`));
for target in $apklist; do
  ui_print "$target";
  apkname=$(basename $target .apk);

  # copy in target system file to patch
  sysfile=`find /system -mindepth 2 -name  $target`;
  cp -fp $sysfile $ap;

  # smali file patches
  if [ -f $script/$apkname.sh ]; then
    baksmali $target;
    . $script/$apkname.sh;
    smali $target;
  fi;

  # apk zip file patches
  if [ -d $patch/$apkname ]; then
    cd $patch/$apkname;
    for j in $(find -type f | cut -c 3-); do
      $bin/zip -v $ap/$target $j;
    done;
    cd $ap;
  fi;

  # zipalign updated file
  cp -f $target $apkname-preopt.apk;
  $bin/zipalign -v 4 $apkname-preopt.apk $target;

  # copy patched file back to system
  cp -fp $ap/$target $sysfile;

  # remove temp files if cleanup is set
  if [ "$cleanup" == 1 ]; then
    rm -rf classout classes.dex $target $apkname-preopt.apk;
  fi;
  progress=$((progress + amount));
  set_progress $(awk -v num=$progress 'BEGIN { print num / 100}');
done;
ui_print " ";

# extra required non-patch changes
. $ap/extracmd.sh;
set_progress 1.2;

# cleanup as necessary
if [ "$cleanup" == 1 ]l then
  ui_print "Cleaning up...";
  ui_print " ";
  rm -rf $ap;
fi;

umount /system;
umount /data;
set_progress 1.34;
ui_print " ";
ui_print "Done!";
exit 0;

